{"version":3,"file":"SharedElementRendererView.js","sourceRoot":"","sources":["../src/SharedElementRendererView.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAChD,OAAO,EAAE,uBAAuB,EAAE,MAAM,6BAA6B,CAAC;AAStE,MAAM,CAAC,OAAO,OAAO,yBAA0B,SAAQ,KAAK,CAAC,aAAwB;IAC3E,YAAY,CAAkC;IAEtD,iBAAiB;QACf,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,iBAAiB,CAAC,GAAG,EAAE;YACjE,IAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oBAAoB;QAClB,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;SAC/B;IACH,CAAC;IAED,MAAM;QACJ,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC;QAC7D,kEAAkE;QAClE,OAAO,CACL,oBAAC,IAAI,IAAC,KAAK,EAAE,UAAU,CAAC,YAAY,EAAE,aAAa,EAAC,MAAM,IACvD,WAAW,CAAC,GAAG,CACd;QACE,aAAa;QACb,EAAE,GAAG,EAAE,GAAG,KAAK,EAAE,EACjB,KAAK,EACL,EAAE,CAAC,CACH,oBAAC,uBAAuB,IAAC,GAAG,EAAE,GAAG,GAAG,IAAI,KAAK,EAAE,KAAM,KAAK,GAAI,CAC/D,CACF,CACI,CACR,CAAC;IACJ,CAAC;CACF","sourcesContent":["import * as React from \"react\";\nimport { View, StyleSheet } from \"react-native\";\nimport { SharedElementTransition } from \"react-native-shared-element\";\n\nimport SharedElementRendererData from \"./SharedElementRendererData\";\nimport { SharedElementEventSubscription } from \"./types\";\n\ntype PropsType = {\n  rendererData: SharedElementRendererData;\n};\n\nexport default class SharedElementRendererView extends React.PureComponent<PropsType> {\n  private subscription?: SharedElementEventSubscription;\n\n  componentDidMount() {\n    this.subscription = this.props.rendererData.addUpdateListener(() => {\n      this.forceUpdate();\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.subscription) {\n      this.subscription();\n      this.subscription = undefined;\n    }\n  }\n\n  render() {\n    const transitions = this.props.rendererData.getTransitions();\n    // console.log('SharedElementRendererView.render: ', transitions);\n    return (\n      <View style={StyleSheet.absoluteFill} pointerEvents=\"none\">\n        {transitions.map(\n          (\n            // @ts-ignore\n            { key, ...props },\n            index\n          ) => (\n            <SharedElementTransition key={`${key}:${index}`} {...props} />\n          )\n        )}\n      </View>\n    );\n  }\n}\n"]}