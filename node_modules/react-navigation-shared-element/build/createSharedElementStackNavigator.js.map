{"version":3,"file":"createSharedElementStackNavigator.js","sourceRoot":"","sources":["../src/createSharedElementStackNavigator.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  useNavigationBuilder,\n  createNavigatorFactory,\n  RouteConfig,\n  StackRouter,\n  StackRouterOptions,\n  StackNavigationState,\n  StackActionHelpers,\n  ParamListBase,\n  StackActions,\n  EventArg,\n} from \"@react-navigation/native\";\nimport {\n  CardAnimationContext,\n  StackView,\n  StackNavigationOptions,\n  createStackNavigator,\n} from \"@react-navigation/stack\";\nimport {\n  StackNavigationConfig,\n  StackNavigationEventMap,\n} from \"@react-navigation/stack/lib/typescript/src/types\";\nimport * as React from \"react\";\nimport { Platform } from \"react-native\";\n\nimport { useSharedElementFocusEvents } from \"./SharedElementFocusEvents\";\nimport SharedElementRendererContext from \"./SharedElementRendererContext\";\nimport SharedElementRendererData from \"./SharedElementRendererData\";\nimport { SharedElementRendererProxy } from \"./SharedElementRendererProxy\";\nimport SharedElementRendererView from \"./SharedElementRendererView\";\nimport createSharedElementScene from \"./createSharedElementScene\";\nimport {\n  SharedElementSceneComponent,\n  SharedElementsComponentConfig,\n} from \"./types\";\nimport { EventEmitter } from \"./utils/EventEmitter\";\n\nlet _navigatorId = 1;\n\nexport default function createSharedElementStackNavigator<\n  ParamList extends ParamListBase\n>(options?: { name?: string; debug?: boolean }) {\n  // Verify that no other options than 'name' or 'debug' are provided.\n  // This might indicate that the user is still using navigation 4 but\n  // didn't change the import to `react-navigation-shared-element/build/v4`.\n  if (\n    options &&\n    Object.keys(options).filter((key) => key !== \"name\" && key !== \"debug\")\n      .length > 0\n  ) {\n    throw new Error(\n      `Invalid options specified to 'createSharedElementStackNavigator'. If you are using react-navigation 4, please import from 'react-navigation-shared-element/build/v4'`\n    );\n  }\n\n  const navigatorId =\n    options && options.name ? options.name : `stack${_navigatorId}`;\n  _navigatorId++;\n  const debug = options?.debug || false;\n\n  const rendererDataProxy = new SharedElementRendererProxy();\n\n  const emitter = new EventEmitter();\n\n  type Props = React.ComponentProps<\n    ReturnType<typeof createStackNavigator>[\"Navigator\"]\n  > &\n    StackRouterOptions &\n    StackNavigationConfig;\n\n  function SharedElementStackNavigator({\n    initialRouteName,\n    children,\n    screenOptions,\n    ...rest\n  }: Props) {\n    const defaultOptions = {\n      gestureEnabled: Platform.OS === \"ios\",\n      animationEnabled: Platform.OS !== \"web\",\n    };\n    const { state, descriptors, navigation, NavigationContent } =\n      useNavigationBuilder<\n        StackNavigationState<ParamListBase>,\n        StackRouterOptions,\n        StackActionHelpers<ParamListBase>,\n        StackNavigationOptions,\n        StackNavigationEventMap\n      >(StackRouter, {\n        initialRouteName,\n        children,\n        screenOptions:\n          typeof screenOptions === \"function\"\n            ? (...args) => ({\n                ...defaultOptions,\n                ...screenOptions(...args),\n              })\n            : {\n                ...defaultOptions,\n                ...screenOptions,\n              },\n      });\n\n    const rendererDataRef = React.useRef<SharedElementRendererData | null>(\n      null\n    );\n\n    React.useEffect(\n      () =>\n        navigation.addListener?.(\"tabPress\", (e) => {\n          const isFocused = navigation.isFocused();\n\n          // Run the operation in the next frame so we're sure all listeners have been run\n          // This is necessary to know if preventDefault() has been called\n          requestAnimationFrame(() => {\n            if (\n              state.index > 0 &&\n              isFocused &&\n              !(e as EventArg<\"tabPress\", true>).defaultPrevented\n            ) {\n              // When user taps on already focused tab and we're inside the tab,\n              // reset the stack to replicate native behaviour\n              navigation.dispatch({\n                ...StackActions.popToTop(),\n                target: state.key,\n              });\n            }\n          });\n        }),\n      [navigation, state.index, state.key]\n    );\n\n    if (debug) {\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      React.useLayoutEffect(() => {\n        rendererDataProxy.addDebugRef();\n        return function cleanup() {\n          rendererDataProxy.releaseDebugRef();\n        };\n      }, []);\n    }\n\n    useSharedElementFocusEvents({ state, emitter });\n\n    return (\n      <SharedElementRendererContext.Consumer>\n        {(rendererData) => {\n          // In case a renderer is already present higher up in the chain\n          // then don't bother creating a renderer here, but use that one instead\n          if (!rendererData) {\n            rendererDataRef.current =\n              rendererDataRef.current || new SharedElementRendererData();\n            rendererDataProxy.source = rendererDataRef.current;\n          } else {\n            rendererDataProxy.source = rendererData;\n          }\n          return (\n            <SharedElementRendererContext.Provider value={rendererDataProxy}>\n              <NavigationContent>\n                <StackView\n                  detachInactiveScreens={Platform.OS !== \"android\"}\n                  {...rest}\n                  state={state}\n                  descriptors={descriptors}\n                  navigation={navigation}\n                />\n                {rendererDataRef.current ? (\n                  <SharedElementRendererView\n                    rendererData={rendererDataRef.current}\n                  />\n                ) : undefined}\n              </NavigationContent>\n            </SharedElementRendererContext.Provider>\n          );\n        }}\n      </SharedElementRendererContext.Consumer>\n    );\n  }\n\n  const navigatorFactory = createNavigatorFactory<\n    StackNavigationState<ParamList>,\n    StackNavigationOptions,\n    StackNavigationEventMap,\n    typeof SharedElementStackNavigator\n  >(SharedElementStackNavigator);\n\n  const { Navigator, Screen } = navigatorFactory<ParamList>();\n\n  type ScreenProps<RouteName extends keyof ParamList> = Omit<\n    RouteConfig<\n      ParamList,\n      RouteName,\n      StackNavigationState<ParamList>,\n      StackNavigationOptions,\n      StackNavigationEventMap\n    >,\n    \"component\" | \"children\"\n  > & {\n    component: SharedElementSceneComponent<any>;\n    sharedElements?: SharedElementsComponentConfig;\n\n    /**\n     * @deprecated\n     * The `sharedElementsConfig` prop has been renamed, use `sharedElements` instead.\n     */\n    sharedElementsConfig?: SharedElementsComponentConfig;\n  };\n\n  // Wrapping Screen to explicitly statically type a \"Shared Element\" Screen.\n  function wrapScreen<RouteName extends keyof ParamList>(\n    _: ScreenProps<RouteName>\n  ) {\n    return null;\n  }\n\n  type NavigatorProps = React.ComponentProps<typeof Navigator>;\n\n  function getSharedElementsChildrenProps(children: React.ReactNode) {\n    return React.Children.toArray(children).reduce<any[]>((acc, child) => {\n      if (React.isValidElement(child)) {\n        if (child.type === wrapScreen) {\n          acc.push(child.props);\n        }\n\n        if (child.type === React.Fragment) {\n          acc.push(...getSharedElementsChildrenProps(child.props.children));\n        }\n      }\n      return acc;\n    }, []);\n  }\n\n  // react-navigation only allows the Screen component as direct children\n  // of Navigator, this is why we need to wrap the Navigator\n  function WrapNavigator(props: NavigatorProps) {\n    const { children, ...restProps } = props;\n    const wrappedComponentsCache = React.useRef<Map<string, any>>(new Map());\n    const screenChildrenProps = getSharedElementsChildrenProps(children);\n\n    return (\n      <Navigator {...restProps}>\n        {screenChildrenProps.map(\n          ({\n            component,\n            name,\n            sharedElements,\n            sharedElementsConfig,\n            ...restChildrenProps\n          }) => {\n            sharedElements = sharedElements || sharedElementsConfig;\n\n            // Show warning when deprecated `sharedElementsConfig` prop was used\n            if (sharedElementsConfig) {\n              console.warn(\n                \"The `sharedElementsConfig` prop has been renamed, use `sharedElements` instead.\"\n              );\n            }\n\n            // Check whether this component was previously already wrapped\n            let wrappedComponent = wrappedComponentsCache.current.get(name);\n            if (\n              !wrappedComponent ||\n              wrappedComponent.config.Component !== component\n            ) {\n              // Wrap the component\n              wrappedComponent = createSharedElementScene(\n                component,\n                sharedElements,\n                rendererDataProxy,\n                emitter,\n                CardAnimationContext,\n                navigatorId,\n                debug\n              );\n              wrappedComponentsCache.current.set(name, wrappedComponent);\n            } else {\n              // Shared elements function might have been changed, so update it\n              wrappedComponent.config.sharedElements = sharedElements;\n            }\n\n            return (\n              <Screen\n                key={name}\n                name={name}\n                component={wrappedComponent}\n                {...restChildrenProps}\n              />\n            );\n          }\n        )}\n      </Navigator>\n    );\n  }\n\n  return {\n    Navigator: WrapNavigator,\n    Screen: wrapScreen,\n  };\n}\n"]}