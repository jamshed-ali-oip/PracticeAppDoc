{"version":3,"file":"types.js","sourceRoot":"","sources":["../src/types.ts"],"names":[],"mappings":"","sourcesContent":["import {\n  SharedElementNode,\n  SharedElementAnimation,\n  SharedElementResize,\n  SharedElementAlign,\n  SharedElementTransitionProps,\n} from \"react-native-shared-element\";\n\nexport {\n  SharedElementNode,\n  SharedElementAnimation,\n  SharedElementTransitionProps,\n};\n\nexport type SharedElementEventSubscription = () => void;\n\nexport type SharedElementStrictConfig = {\n  readonly id: string;\n  readonly otherId: string;\n  readonly animation: SharedElementAnimation;\n  readonly resize?: SharedElementResize;\n  readonly align?: SharedElementAlign;\n  readonly debug?: boolean;\n};\n\nexport type SharedElementsStrictConfig = SharedElementStrictConfig[];\n\nexport type SharedElementConfig =\n  | {\n      readonly id: string;\n      readonly otherId?: string;\n      readonly animation?: SharedElementAnimation;\n      readonly resize?: SharedElementResize;\n      readonly align?: SharedElementAlign;\n      readonly debug?: boolean;\n    }\n  | string;\n\nexport type SharedElementsConfig = SharedElementConfig[];\n\nexport type SharedElementAnimatedValue = any;\n\nexport type SharedElementRoute = {\n  key: string;\n  name: string;\n  params: {\n    [key: string]: any;\n  };\n};\n\nexport interface SharedElementCompatRoute {\n  /**\n   * Key of the screen.\n   */\n  readonly key: string;\n\n  /**\n   * Route name of this screen.\n   */\n  readonly name: string;\n\n  /**\n   * Params for this route.\n   */\n  readonly params: {\n    [key: string]: any;\n  };\n\n  /**\n   * @deprecated\n   * Gets the parameter by its name.\n   */\n  getParam(name: string): any;\n\n  /**\n   * @deprecated\n   * Gets the navigation state.\n   */\n  readonly state: {\n    readonly key: string;\n    readonly routeName: string;\n    readonly params: {\n      [key: string]: any;\n    };\n  };\n}\n\nexport type SharedElementsComponentConfig = (\n  route: SharedElementCompatRoute,\n  otherRoute: SharedElementCompatRoute,\n  showing: boolean\n) => SharedElementsConfig | undefined;\n\nexport type SharedElementSceneComponent<P = object> = React.ComponentType<P> & {\n  sharedElements?: SharedElementsComponentConfig;\n};\n"]}