{"version":3,"file":"EventEmitter.js","sourceRoot":"","sources":["../../src/utils/EventEmitter.ts"],"names":[],"mappings":"AAAA,MAAM,OAAO,YAAY;IACf,SAAS,GAEb,EAAE,CAAC;IAEP,IAAI,CAAC,IAAY,EAAE,CAAM;QACvB,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACxB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;SACzD;IACH,CAAC;IAED,WAAW,CAAC,IAAY,EAAE,QAAsB;QAC9C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;QAClD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACpC,OAAO,GAAG,EAAE,CACV,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3E,CAAC;CACF","sourcesContent":["export class EventEmitter {\n  private listeners: {\n    [key: string]: ((any) => void)[];\n  } = {};\n\n  emit(name: string, e: any): void {\n    if (this.listeners[name]) {\n      this.listeners[name].forEach((callback) => callback(e));\n    }\n  }\n\n  addListener(name: string, callback: (any) => any): () => void {\n    this.listeners[name] = this.listeners[name] || [];\n    this.listeners[name].push(callback);\n    return () =>\n      this.listeners[name].splice(this.listeners[name].indexOf(callback), 1);\n  }\n}\n"]}