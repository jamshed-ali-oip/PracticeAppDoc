{"version":3,"file":"createSharedElementStackNavigator.js","sourceRoot":"","sources":["../../src/v4/createSharedElementStackNavigator.tsx"],"names":[],"mappings":"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","sourcesContent":["import hoistNonReactStatics from \"hoist-non-react-statics\";\nimport * as React from \"react\";\nimport { Platform } from \"react-native\";\nimport {\n  NavigationNavigator,\n  NavigationProp,\n  NavigationState,\n} from \"react-navigation\";\nimport {\n  createStackNavigator,\n  CardAnimationContext,\n} from \"react-navigation-stack\";\n\nimport SharedElementRendererContext from \"../SharedElementRendererContext\";\nimport SharedElementRendererData, {\n  ISharedElementRendererData,\n} from \"../SharedElementRendererData\";\nimport { SharedElementRendererProxy } from \"../SharedElementRendererProxy\";\nimport SharedElementRendererView from \"../SharedElementRendererView\";\nimport createSharedElementScene from \"./createSharedElementScene\";\n\nlet _navigatorId = 1;\n\nfunction createSharedElementStackSceneNavigator(\n  routeConfigs: Parameters<typeof createStackNavigator>[0],\n  stackConfig: Parameters<typeof createStackNavigator>[1],\n  rendererData: ISharedElementRendererData,\n  navigatorId: string,\n  debug: boolean\n) {\n  //console.log('createSharedElementStackSceneNavigator...', navigatorId);\n\n  const wrappedRouteConfigs = {\n    ...routeConfigs,\n  };\n  for (const key in routeConfigs) {\n    const routeConfig: any = wrappedRouteConfigs[key];\n    const component =\n      typeof routeConfig === \"object\" && routeConfig.screen\n        ? routeConfig.screen\n        : routeConfig;\n    const wrappedComponent = createSharedElementScene(\n      component,\n      rendererData,\n      CardAnimationContext,\n      navigatorId,\n      debug\n    );\n    if (component === routeConfig) {\n      wrappedRouteConfigs[key] = wrappedComponent;\n    } else {\n      wrappedRouteConfigs[key] = {\n        ...routeConfig,\n        screen: wrappedComponent,\n      };\n    }\n  }\n\n  // Override `onTransitionStart` and `onTransitionEnd` and\n  // hook in into the transition lifecycle events.\n  const defaultNavigationOptions = stackConfig?.defaultNavigationOptions;\n  function defaultNavigationOptionsFn(props: any) {\n    const defaultNavigationOptionsResult =\n      typeof defaultNavigationOptions === \"function\"\n        ? defaultNavigationOptions(props)\n        : defaultNavigationOptions;\n    return {\n      ...defaultNavigationOptionsResult,\n      onTransitionStart: (transitionProps: { closing: boolean }) => {\n        rendererData.startTransition(\n          transitionProps.closing,\n          navigatorId,\n          rendererData.nestingDepth\n        );\n        defaultNavigationOptionsResult?.onTransitionStart?.(transitionProps);\n      },\n      onTransitionEnd: (transitionProps: { closing: boolean }) => {\n        rendererData.endTransition(\n          transitionProps.closing,\n          navigatorId,\n          rendererData.nestingDepth\n        );\n        defaultNavigationOptionsResult?.onTransitionEnd?.(transitionProps);\n      },\n    };\n  }\n\n  return createStackNavigator(wrappedRouteConfigs, {\n    detachInactiveScreens: Platform.OS !== \"android\",\n    ...stackConfig,\n    defaultNavigationOptions:\n      typeof defaultNavigationOptions === \"function\"\n        ? defaultNavigationOptionsFn\n        : defaultNavigationOptionsFn({}),\n  });\n}\n\nfunction createSharedElementStackNavigator(\n  routeConfigs: Parameters<typeof createStackNavigator>[0],\n  stackConfig: Parameters<typeof createStackNavigator>[1],\n  options?: {\n    name?: string;\n    debug?: boolean;\n  }\n): NavigationNavigator<any, NavigationProp<NavigationState>> {\n  const navigatorId =\n    options && options.name ? options.name : `stack${_navigatorId}`;\n  _navigatorId++;\n  const debug = options?.debug || false;\n\n  // Create a proxy which is later updated to link\n  // to the renderer\n  const rendererDataProxy = new SharedElementRendererProxy();\n\n  const SharedElementNavigator = createSharedElementStackSceneNavigator(\n    routeConfigs,\n    stackConfig,\n    rendererDataProxy,\n    navigatorId,\n    debug\n  );\n\n  class SharedElementRenderer extends React.Component {\n    private rendererData?: SharedElementRendererData;\n\n    componentDidMount() {\n      if (debug) {\n        rendererDataProxy.addDebugRef();\n      }\n    }\n\n    componentWillUnmount() {\n      if (debug) {\n        rendererDataProxy.releaseDebugRef();\n      }\n    }\n\n    render() {\n      return (\n        <SharedElementRendererContext.Consumer>\n          {(rendererData) => {\n            // In case a renderer is already present higher up in the chain\n            // then don't bother creating a renderer here, but use that one instead\n            if (!rendererData) {\n              this.rendererData =\n                this.rendererData || new SharedElementRendererData();\n              rendererDataProxy.source = this.rendererData;\n            } else {\n              rendererDataProxy.source = rendererData;\n            }\n            return (\n              <SharedElementRendererContext.Provider value={rendererDataProxy}>\n                <SharedElementNavigator {...this.props} />\n                {this.rendererData ? (\n                  <SharedElementRendererView rendererData={this.rendererData} />\n                ) : undefined}\n              </SharedElementRendererContext.Provider>\n            );\n          }}\n        </SharedElementRendererContext.Consumer>\n      );\n    }\n  }\n  hoistNonReactStatics(SharedElementRenderer, SharedElementNavigator);\n  // @ts-ignore\n  return SharedElementRenderer;\n}\n\nexport default createSharedElementStackNavigator;\n"]}